services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
      POSTGRES_DB: docker_e_kubernetes
    ports:
      # deixe 5433 apenas se você realmente precisa enxergar o banco do host;
      # em ambientes concorrentes, pode comentar esta linha para evitar “port already allocated”.
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./codigo.sql:/docker-entrypoint-initdb.d/00_seed.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d docker_e_kubernetes"]
      interval: 5s
      timeout: 5s
      retries: 20

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
      POSTGRES_ADDRESS: db:5432
      POSTGRES_DBNAME: docker_e_kubernetes
    ports:
      - "8200:8200"

  # OBS: o Jenkins da pipeline já está em outro ambiente; o container
  # abaixo é opcional (não é necessário para a pipeline rodar).
  # jenkins:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.jenkins
  #   user: root
  #   environment:
  #     JAVA_OPTS: -Djenkins.install.runSetupWizard=false
  #   ports:
  #     - "8080:8080"
  #     - "50000:50000"
  #   volumes:
  #     - jenkins_home:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./:/workspace
  #   depends_on:
  #     - db

volumes:
  pgdata:
  jenkins_home:
